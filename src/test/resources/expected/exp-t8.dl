.decl W(v0:number)
.decl S1_W(v0:symbol)
.decl S1_cons_An(v0:symbol, v1:__SYS_TYPE__S1_Animal)
.decl S1_Animal_byStr(v0:symbol, v1:__SYS_TYPE__S1_Animal)
.decl Q(v0:number)
.decl S2_R(v0:number)
.decl S1_P(v0:number)
.decl S1_R(v0:number)
.decl S1_foo(v0:__SYS_TYPE__S1_Animal)
.decl S1_Bar(v0:__SYS_TYPE__S1_Animal)
.decl S1_Animal(v0:__SYS_TYPE__S1_Animal)
.type __SYS_TYPE_S1_cons_An = [v0:symbol]
.type __SYS_TYPE_S1_Animal_byStr = [v0:symbol]
.type __SYS_TYPE__S1_Animal = [v0:__SYS_TYPE_S1_cons_An, v1:__SYS_TYPE_S1_Animal_byStr]
Q(1).
Q(2).
W(x):- S2_R(x).
S2_R(x):- Q(x).
S1_P(10).
S1_R(x):- S1_P(x).
S1_cons_An(x, [nil, [x]]), S1_Animal([nil, [x]]), S1_foo([nil, [x]]):- x = "cat", S1_W(x).
S1_Bar(y):- S1_cons_An(_, y).
